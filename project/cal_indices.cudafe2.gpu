# 56 "../src/indices/../common_defines.h"
struct partition_info;
# 77 "../src/indices/../common_defines.h"
struct debug_structure;
# 1 "cal_indices.cudafe1.gpu"
typedef char __nv_bool;
# 211 "/usr/lib/gcc/x86_64-linux-gnu/4.4.3/include/stddef.h" 3
typedef unsigned long size_t;
#include "crt/device_runtime.h"
# 56 "../src/indices/../common_defines.h"
struct partition_info {
# 57 "../src/indices/../common_defines.h"
int *addr;
# 57 "../src/indices/../common_defines.h"
int *opposite_addr;
# 58 "../src/indices/../common_defines.h"
int len;
# 58 "../src/indices/../common_defines.h"
int len_opposite;
# 58 "../src/indices/../common_defines.h"
int warp_len;
# 59 "../src/indices/../common_defines.h"
int left;
# 59 "../src/indices/../common_defines.h"
int right;
# 60 "../src/indices/../common_defines.h"
__nv_bool B2A;
# 60 "../src/indices/../common_defines.h"
char __nv_no_debug_dummy_end_padding_0[3];};
# 77 "../src/indices/../common_defines.h"
struct debug_structure {
# 78 "../src/indices/../common_defines.h"
int num_loop;
# 79 "../src/indices/../common_defines.h"
int wrong_1;
# 80 "../src/indices/../common_defines.h"
int wrong_2;};
#if !defined(__CUDABE__)
# 103 "/usr/include/bits/stdio2.h" 3
 __device_builtin__ ___device__(extern  __no_sc__) __inline__ __attribute__((__artificial__)) __attribute__((__always_inline__)) int printf(const char *__restrict__, ...);
#endif
#if !defined(__CUDABE__)
# 222 "/usr/local/cuda/bin/../include/math_functions.h"
 __device_builtin__ ___device__(extern  __no_sc__) int min(int, int);
#endif
#if !defined(__CUDABE__)
# 258 "/usr/local/cuda/bin/../include/math_functions.h"
 __device_builtin__ ___device__(extern  __no_sc__) int max(int, int);
#endif
#if !defined(__CUDABE__)
# 131 "/usr/local/cuda/bin/../include/device_functions.h"
 __device_builtin__ ___device__(extern  __no_sc__) void __syncthreads(void);
#endif
# 7 "../src/indices/cal_indices.cu"
___device__(extern  __no_sc__) int _Z14next_queue_posi(int);
# 12 "../src/indices/cal_indices.cu"
___device__(extern  __no_sc__) void _Z10cal_indx_1iii(int, int, int);
# 59 "../src/indices/cal_indices.cu"
___device__(extern  __no_sc__) void _Z13bitonic_mergebPViii(__nv_bool, volatile int *, int, int);
# 119 "../src/indices/cal_indices.cu"
___device__(extern  __no_sc__) __nv_bool _Z14monotone_checkPii(int *, int);
# 126 "../src/indices/cal_indices.cu"
___device__(extern  __no_sc__) void _Z10cal_indx_2iiii(int, int, int, int);
# 249 "../src/indices/cal_indices.cu"
___device__(extern  __no_sc__) void _Z10cal_indx_3ii(int, int);
# 411 "../src/indices/cal_indices.cu"
__global__ __var_used__ extern void _Z8cal_indxiii(int, int, int);
# 421 "../src/indices/cal_indices.cu"
__global__ __var_used__ extern void _Z12move_indicesiiii(int, int, int, int);
# 63 "../src/indices/../common_defines.h"
extern  __device__  __var_used__ int *list_p0[2];
# 64 "../src/indices/../common_defines.h"
extern  __device__  __var_used__ int *list_p[4][2];
# 65 "../src/indices/../common_defines.h"
extern  __device__  __var_used__ int calculated_indices_len[4][4];
# 66 "../src/indices/../common_defines.h"
extern  __device__  __var_used__ int swapped[4];
# 67 "../src/indices/../common_defines.h"
extern  __device__  __var_used__ int *_result;
# 68 "../src/indices/../common_defines.h"
extern  __device__  __var_used__ int gpu_result_size;
# 69 "../src/indices/../common_defines.h"
extern  __device__  __var_used__ int _nm[2];
# 70 "../src/indices/../common_defines.h"
extern  __device__  __var_used__ struct partition_info partitions_info[4][2052];
# 71 "../src/indices/../common_defines.h"
extern  __device__  __var_used__ int *_result_addr[4];
# 73 "../src/indices/../common_defines.h"
extern  __device__  __var_used__ int o_scan_buffers[4][2116];
# 74 "../src/indices/../common_defines.h"
extern  __device__  __var_used__ int *_scan_buffers[4];
# 83 "../src/indices/../common_defines.h"
extern  __device__  __var_used__ struct debug_structure debug1;
#include "common_functions.h"
#if !defined(__CUDABE__)
#endif
#if !defined(__CUDABE__)
#endif
#if !defined(__CUDABE__)
#endif
#if !defined(__CUDABE__)
#endif
# 7 "../src/indices/cal_indices.cu"
___device__( __no_sc__) int _Z14next_queue_posi(
# 7 "../src/indices/cal_indices.cu"
int value){
# 7 "../src/indices/cal_indices.cu"
{
# 7 "../src/indices/cal_indices.cu"
{
# 8 "../src/indices/cal_indices.cu"
return (value + 1) % 4;
# 9 "../src/indices/cal_indices.cu"
}
# 9 "../src/indices/cal_indices.cu"
}}
# 12 "../src/indices/cal_indices.cu"
___device__( __no_sc__) void _Z10cal_indx_1iii(
# 12 "../src/indices/cal_indices.cu"
int block_size, 
# 12 "../src/indices/cal_indices.cu"
int block_2_size, 
# 12 "../src/indices/cal_indices.cu"
int indices_now){
# 12 "../src/indices/cal_indices.cu"
{
# 12 "../src/indices/cal_indices.cu"
{
# 13 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34638_7_non_const_id;
# 14 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34639_7_non_const_group_id;
# 15 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34640_7_non_const_sub_id;
# 16 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34641_7_non_const_opposite_sub_id;
# 18 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34643_7_non_const_indices_next;
# 19 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34644_7_non_const_temp_blocks[2];
# 21 "../src/indices/cal_indices.cu"
 int *__cuda_local_var_34646_8_non_const_myList;
# 22 "../src/indices/cal_indices.cu"
 int *__cuda_local_var_34647_8_non_const_oppositeList;
# 23 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34648_7_non_const_myLen;
# 24 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34649_7_non_const_oppositeLen;
# 25 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34650_7_non_const_value;
# 26 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34651_7_non_const_left;
# 26 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34651_17_non_const_right;
# 37 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34662_7_non_const_next_opposite_offset;
# 39 "../src/indices/cal_indices.cu"
 int *__cuda_local_var_34664_8_non_const_save_indices0;
# 40 "../src/indices/cal_indices.cu"
 int *__cuda_local_var_34665_8_non_const_save_indices;
# 41 "../src/indices/cal_indices.cu"
 int *__cuda_local_var_34666_8_non_const_opposite_indices;
# 44 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34669_7_non_const_mysum;
# 45 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34670_7_non_const_oppositeSum;
# 13 "../src/indices/cal_indices.cu"
__cuda_local_var_34638_7_non_const_id = ((int)(threadIdx.x));
# 14 "../src/indices/cal_indices.cu"
__cuda_local_var_34639_7_non_const_group_id = (__cuda_local_var_34638_7_non_const_id >> 1);
# 15 "../src/indices/cal_indices.cu"
__cuda_local_var_34640_7_non_const_sub_id = (__cuda_local_var_34638_7_non_const_id & 1);
# 16 "../src/indices/cal_indices.cu"
__cuda_local_var_34641_7_non_const_opposite_sub_id = (__cuda_local_var_34640_7_non_const_sub_id ^ 1);
# 18 "../src/indices/cal_indices.cu"
__cuda_local_var_34643_7_non_const_indices_next = ((indices_now + 1) % 4);
# 19 "../src/indices/cal_indices.cu"
(*(__cuda_local_var_34644_7_non_const_temp_blocks)) = block_size;
# 19 "../src/indices/cal_indices.cu"
((__cuda_local_var_34644_7_non_const_temp_blocks)[1UL]) = block_2_size;
# 21 "../src/indices/cal_indices.cu"
__cuda_local_var_34646_8_non_const_myList = ((((list_p)[indices_now]))[(__cuda_local_var_34639_7_non_const_group_id ^ __cuda_local_var_34640_7_non_const_sub_id)]);
# 22 "../src/indices/cal_indices.cu"
__cuda_local_var_34647_8_non_const_oppositeList = ((((list_p)[indices_now]))[(__cuda_local_var_34639_7_non_const_group_id ^ __cuda_local_var_34641_7_non_const_opposite_sub_id)]);
# 23 "../src/indices/cal_indices.cu"
__cuda_local_var_34648_7_non_const_myLen = ((__cuda_local_var_34644_7_non_const_temp_blocks)[__cuda_local_var_34640_7_non_const_sub_id]);
# 24 "../src/indices/cal_indices.cu"
__cuda_local_var_34649_7_non_const_oppositeLen = ((__cuda_local_var_34644_7_non_const_temp_blocks)[__cuda_local_var_34641_7_non_const_opposite_sub_id]);
# 25 "../src/indices/cal_indices.cu"
__cuda_local_var_34650_7_non_const_value = (__cuda_local_var_34646_8_non_const_myList[(__cuda_local_var_34648_7_non_const_myLen - 1)]);
# 26 "../src/indices/cal_indices.cu"
__cuda_local_var_34651_7_non_const_left = 0;
# 26 "../src/indices/cal_indices.cu"
__cuda_local_var_34651_17_non_const_right = (__cuda_local_var_34649_7_non_const_oppositeLen - 1);
# 28 "../src/indices/cal_indices.cu"
while (__cuda_local_var_34651_7_non_const_left < __cuda_local_var_34651_17_non_const_right)
# 28 "../src/indices/cal_indices.cu"
{
# 29 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34654_8_non_const_mid;
# 29 "../src/indices/cal_indices.cu"
__cuda_local_var_34654_8_non_const_mid = (((__cuda_local_var_34651_7_non_const_left + __cuda_local_var_34651_17_non_const_right) + 1) / 2);
# 30 "../src/indices/cal_indices.cu"
if (__cuda_local_var_34650_7_non_const_value < (__cuda_local_var_34647_8_non_const_oppositeList[__cuda_local_var_34654_8_non_const_mid]))
# 30 "../src/indices/cal_indices.cu"
{
# 31 "../src/indices/cal_indices.cu"
__cuda_local_var_34651_17_non_const_right = (__cuda_local_var_34654_8_non_const_mid - 1);
# 31 "../src/indices/cal_indices.cu"
}
# 31 "../src/indices/cal_indices.cu"
else 
# 31 "../src/indices/cal_indices.cu"
{
# 32 "../src/indices/cal_indices.cu"
__cuda_local_var_34651_7_non_const_left = __cuda_local_var_34654_8_non_const_mid;
# 32 "../src/indices/cal_indices.cu"
}
# 33 "../src/indices/cal_indices.cu"
}
# 37 "../src/indices/cal_indices.cu"
__cuda_local_var_34662_7_non_const_next_opposite_offset = (__cuda_local_var_34651_7_non_const_left + ((int)((__cuda_local_var_34647_8_non_const_oppositeList[__cuda_local_var_34651_7_non_const_left]) <= __cuda_local_var_34650_7_non_const_value)));
# 39 "../src/indices/cal_indices.cu"
__cuda_local_var_34664_8_non_const_save_indices0 = (((calculated_indices_len)[indices_now]));
# 40 "../src/indices/cal_indices.cu"
__cuda_local_var_34665_8_non_const_save_indices = (__cuda_local_var_34664_8_non_const_save_indices0 + (__cuda_local_var_34639_7_non_const_group_id << 1));
# 41 "../src/indices/cal_indices.cu"
__cuda_local_var_34666_8_non_const_opposite_indices = (__cuda_local_var_34664_8_non_const_save_indices0 + ((__cuda_local_var_34639_7_non_const_group_id ^ 1) << 1));
# 42 "../src/indices/cal_indices.cu"
(__cuda_local_var_34665_8_non_const_save_indices[__cuda_local_var_34640_7_non_const_sub_id]) = __cuda_local_var_34662_7_non_const_next_opposite_offset;
# 44 "../src/indices/cal_indices.cu"
__cuda_local_var_34669_7_non_const_mysum = ((__cuda_local_var_34665_8_non_const_save_indices[__cuda_local_var_34640_7_non_const_sub_id]) + (__cuda_local_var_34665_8_non_const_save_indices[__cuda_local_var_34641_7_non_const_opposite_sub_id]));
# 45 "../src/indices/cal_indices.cu"
__cuda_local_var_34670_7_non_const_oppositeSum = ((__cuda_local_var_34666_8_non_const_opposite_indices[__cuda_local_var_34640_7_non_const_sub_id]) + (__cuda_local_var_34666_8_non_const_opposite_indices[__cuda_local_var_34641_7_non_const_opposite_sub_id]));
# 48 "../src/indices/cal_indices.cu"
if ((__cuda_local_var_34669_7_non_const_mysum + __cuda_local_var_34639_7_non_const_group_id) > __cuda_local_var_34670_7_non_const_oppositeSum)
# 48 "../src/indices/cal_indices.cu"
{
# 51 "../src/indices/cal_indices.cu"
(__cuda_local_var_34664_8_non_const_save_indices0[__cuda_local_var_34641_7_non_const_opposite_sub_id]) = (__cuda_local_var_34662_7_non_const_next_opposite_offset - 1);
# 52 "../src/indices/cal_indices.cu"
((((list_p)[indices_now]))[__cuda_local_var_34640_7_non_const_sub_id]) = __cuda_local_var_34646_8_non_const_myList;
# 54 "../src/indices/cal_indices.cu"
((((list_p)[__cuda_local_var_34643_7_non_const_indices_next]))[__cuda_local_var_34641_7_non_const_opposite_sub_id]) = (__cuda_local_var_34647_8_non_const_oppositeList + __cuda_local_var_34662_7_non_const_next_opposite_offset);
# 55 "../src/indices/cal_indices.cu"
((swapped)[__cuda_local_var_34643_7_non_const_indices_next]) = (((swapped)[indices_now]) ^ __cuda_local_var_34639_7_non_const_group_id);
# 56 "../src/indices/cal_indices.cu"
}
# 57 "../src/indices/cal_indices.cu"
} 
# 57 "../src/indices/cal_indices.cu"
}}
# 59 "../src/indices/cal_indices.cu"
___device__( __no_sc__) void _Z13bitonic_mergebPViii(
# 59 "../src/indices/cal_indices.cu"
__nv_bool up, 
# 59 "../src/indices/cal_indices.cu"
volatile int *data, 
# 59 "../src/indices/cal_indices.cu"
int id, 
# 59 "../src/indices/cal_indices.cu"
int n){
# 59 "../src/indices/cal_indices.cu"
{
# 59 "../src/indices/cal_indices.cu"
{
# 61 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34686_7_non_const_n2;
# 60 "../src/indices/cal_indices.cu"
if (n < 1)
# 60 "../src/indices/cal_indices.cu"
{
# 60 "../src/indices/cal_indices.cu"
return;
# 60 "../src/indices/cal_indices.cu"
}
# 61 "../src/indices/cal_indices.cu"
__cuda_local_var_34686_7_non_const_n2 = (n >> 1);
# 63 "../src/indices/cal_indices.cu"
{
# 63 "../src/indices/cal_indices.cu"
__syncthreads();
# 63 "../src/indices/cal_indices.cu"
}
# 64 "../src/indices/cal_indices.cu"
if (((int)((data[id]) > (data[(id + n)]))) ^ ((int)up))
# 64 "../src/indices/cal_indices.cu"
{
# 65 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34690_8_non_const_t;
# 65 "../src/indices/cal_indices.cu"
__cuda_local_var_34690_8_non_const_t = (data[id]);
# 66 "../src/indices/cal_indices.cu"
(data[id]) = (data[(id + n)]);
# 67 "../src/indices/cal_indices.cu"
(data[(id + n)]) = __cuda_local_var_34690_8_non_const_t;
# 68 "../src/indices/cal_indices.cu"
}
# 70 "../src/indices/cal_indices.cu"
if (id >= __cuda_local_var_34686_7_non_const_n2)
# 70 "../src/indices/cal_indices.cu"
{
# 71 "../src/indices/cal_indices.cu"
(id -= __cuda_local_var_34686_7_non_const_n2) , ((void)(data += n));
# 71 "../src/indices/cal_indices.cu"
}
# 72 "../src/indices/cal_indices.cu"
_Z13bitonic_mergebPViii(up, data, id, __cuda_local_var_34686_7_non_const_n2);
# 73 "../src/indices/cal_indices.cu"
} 
# 73 "../src/indices/cal_indices.cu"
}}
# 119 "../src/indices/cal_indices.cu"
___device__( __no_sc__) __nv_bool _Z14monotone_checkPii(
# 119 "../src/indices/cal_indices.cu"
int *list, 
# 119 "../src/indices/cal_indices.cu"
int n){
# 119 "../src/indices/cal_indices.cu"
{
# 119 "../src/indices/cal_indices.cu"
{
# 119 "../src/indices/cal_indices.cu"
{
# 120 "../src/indices/cal_indices.cu"
 int i;
# 120 "../src/indices/cal_indices.cu"
i = 1;
# 120 "../src/indices/cal_indices.cu"
for (; (i < n); i++)
# 120 "../src/indices/cal_indices.cu"
{
# 121 "../src/indices/cal_indices.cu"
if (!((list[(i - 1)]) <= (list[i])))
# 121 "../src/indices/cal_indices.cu"
{
# 122 "../src/indices/cal_indices.cu"
return ((__nv_bool)0);
# 122 "../src/indices/cal_indices.cu"
}
# 122 "../src/indices/cal_indices.cu"
}
# 122 "../src/indices/cal_indices.cu"
}
# 123 "../src/indices/cal_indices.cu"
return ((__nv_bool)1);
# 124 "../src/indices/cal_indices.cu"
}
# 124 "../src/indices/cal_indices.cu"
}}
# 126 "../src/indices/cal_indices.cu"
___device__( __no_sc__) void _Z10cal_indx_2iiii(
# 126 "../src/indices/cal_indices.cu"
int parts, 
# 126 "../src/indices/cal_indices.cu"
int part_size, 
# 126 "../src/indices/cal_indices.cu"
int block_size, 
# 126 "../src/indices/cal_indices.cu"
int indices_now){
# 126 "../src/indices/cal_indices.cu"
{
# 126 "../src/indices/cal_indices.cu"
{
# 127 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34738_7_non_const_id;
# 128 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34739_7_non_const_myside;
# 129 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34740_7_non_const_opposite_side;
# 130 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34741_7_non_const_idx;
# 131 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34742_7_non_const_opposite_idx;
# 132 "../src/indices/cal_indices.cu"
 int *__cuda_local_var_34743_8_non_const_myList;
# 133 "../src/indices/cal_indices.cu"
 int *__cuda_local_var_34744_8_non_const_oppositeList;
# 135 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34746_7_non_const_myValue;
# 138 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34749_7_non_const_left;
# 138 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34749_16_non_const_right;
# 151 "../src/indices/cal_indices.cu"
static  __shared__  __var_used__ volatile int __cuda_local_var_34762_40_non_const_shared[2][2049];
# 174 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34771_7_non_const_whole_id;
# 175 "../src/indices/cal_indices.cu"
static  __shared__  __var_used__ volatile int __cuda_local_var_34772_40_non_const_shared_decide_next_addr[2049];
# 178 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34775_7_non_const_indices_next;
# 181 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34778_7_non_const_begin1;
# 181 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34778_14_non_const_end1;
# 181 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34778_19_non_const_begin2;
# 181 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34778_26_non_const_end2;
# 181 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34778_31_non_const_len1;
# 181 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34778_36_non_const_len2;
# 192 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34789_7_non_const_left1;
# 192 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34789_13_non_const_left2;
# 192 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34789_19_non_const_right1;
# 192 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34789_26_non_const_right2;
# 202 "../src/indices/cal_indices.cu"
 struct partition_info *__cuda_local_var_34799_26_non_const_info;
# 127 "../src/indices/cal_indices.cu"
__cuda_local_var_34738_7_non_const_id = ((int)(threadIdx.x));
# 128 "../src/indices/cal_indices.cu"
__cuda_local_var_34739_7_non_const_myside = ((int)(threadIdx.y));
# 129 "../src/indices/cal_indices.cu"
__cuda_local_var_34740_7_non_const_opposite_side = ((int)(!(__cuda_local_var_34739_7_non_const_myside)));
# 130 "../src/indices/cal_indices.cu"
__cuda_local_var_34741_7_non_const_idx = (((__cuda_local_var_34738_7_non_const_id + 1) * part_size) - 1);
# 132 "../src/indices/cal_indices.cu"
__cuda_local_var_34743_8_non_const_myList = ((((list_p)[indices_now]))[__cuda_local_var_34739_7_non_const_myside]);
# 133 "../src/indices/cal_indices.cu"
__cuda_local_var_34744_8_non_const_oppositeList = ((((list_p)[indices_now]))[__cuda_local_var_34740_7_non_const_opposite_side]);
# 135 "../src/indices/cal_indices.cu"
__cuda_local_var_34746_7_non_const_myValue = (__cuda_local_var_34743_8_non_const_myList[__cuda_local_var_34741_7_non_const_idx]);
# 138 "../src/indices/cal_indices.cu"
__cuda_local_var_34749_7_non_const_left = 0;
# 138 "../src/indices/cal_indices.cu"
__cuda_local_var_34749_16_non_const_right = block_size;
# 140 "../src/indices/cal_indices.cu"
while (__cuda_local_var_34749_7_non_const_left < __cuda_local_var_34749_16_non_const_right)
# 140 "../src/indices/cal_indices.cu"
{
# 141 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34752_8_non_const_mid;
# 141 "../src/indices/cal_indices.cu"
__cuda_local_var_34752_8_non_const_mid = (((__cuda_local_var_34749_7_non_const_left + __cuda_local_var_34749_16_non_const_right) + 1) / 2);
# 142 "../src/indices/cal_indices.cu"
if (__cuda_local_var_34746_7_non_const_myValue < (__cuda_local_var_34744_8_non_const_oppositeList[__cuda_local_var_34752_8_non_const_mid]))
# 142 "../src/indices/cal_indices.cu"
{
# 143 "../src/indices/cal_indices.cu"
__cuda_local_var_34749_16_non_const_right = (__cuda_local_var_34752_8_non_const_mid - 1);
# 143 "../src/indices/cal_indices.cu"
}
# 143 "../src/indices/cal_indices.cu"
else 
# 143 "../src/indices/cal_indices.cu"
{
# 144 "../src/indices/cal_indices.cu"
__cuda_local_var_34749_7_non_const_left = __cuda_local_var_34752_8_non_const_mid;
# 144 "../src/indices/cal_indices.cu"
}
# 145 "../src/indices/cal_indices.cu"
}
# 149 "../src/indices/cal_indices.cu"
__cuda_local_var_34742_7_non_const_opposite_idx = ((__cuda_local_var_34749_7_non_const_left + ((int)((__cuda_local_var_34744_8_non_const_oppositeList[__cuda_local_var_34749_7_non_const_left]) <= __cuda_local_var_34746_7_non_const_myValue))) - 1);
# 152 "../src/indices/cal_indices.cu"
((((__cuda_local_var_34762_40_non_const_shared)[__cuda_local_var_34739_7_non_const_myside]))[((parts - __cuda_local_var_34738_7_non_const_id) - 1)]) = __cuda_local_var_34741_7_non_const_idx;
# 153 "../src/indices/cal_indices.cu"
((((__cuda_local_var_34762_40_non_const_shared)[__cuda_local_var_34740_7_non_const_opposite_side]))[(parts + __cuda_local_var_34738_7_non_const_id)]) = __cuda_local_var_34742_7_non_const_opposite_idx;
# 155 "../src/indices/cal_indices.cu"
{
# 155 "../src/indices/cal_indices.cu"
__syncthreads();
# 155 "../src/indices/cal_indices.cu"
}
# 156 "../src/indices/cal_indices.cu"
_Z13bitonic_mergebPViii(((__nv_bool)0), (((__cuda_local_var_34762_40_non_const_shared)[__cuda_local_var_34739_7_non_const_myside])), __cuda_local_var_34738_7_non_const_id, parts);
# 157 "../src/indices/cal_indices.cu"
{
# 157 "../src/indices/cal_indices.cu"
__syncthreads();
# 157 "../src/indices/cal_indices.cu"
}
# 173 "../src/indices/cal_indices.cu"
{
# 173 "../src/indices/cal_indices.cu"
__syncthreads();
# 173 "../src/indices/cal_indices.cu"
}
# 174 "../src/indices/cal_indices.cu"
__cuda_local_var_34771_7_non_const_whole_id = ((int)(((blockDim.x) * ((unsigned)__cuda_local_var_34739_7_non_const_myside)) + ((unsigned)__cuda_local_var_34738_7_non_const_id)));
# 176 "../src/indices/cal_indices.cu"
((__cuda_local_var_34772_40_non_const_shared_decide_next_addr)[__cuda_local_var_34771_7_non_const_whole_id]) = ((int)((max(((((__cuda_local_var_34762_40_non_const_shared)[0]))[__cuda_local_var_34771_7_non_const_whole_id]), ((((__cuda_local_var_34762_40_non_const_shared)[1]))[__cuda_local_var_34771_7_non_const_whole_id]))) < block_size));
# 177 "../src/indices/cal_indices.cu"
{
# 177 "../src/indices/cal_indices.cu"
__syncthreads();
# 177 "../src/indices/cal_indices.cu"
}
# 178 "../src/indices/cal_indices.cu"
__cuda_local_var_34775_7_non_const_indices_next = ((indices_now + 1) % 4);
# 182 "../src/indices/cal_indices.cu"
if (__cuda_local_var_34771_7_non_const_whole_id == 0)
# 182 "../src/indices/cal_indices.cu"
{
# 183 "../src/indices/cal_indices.cu"
__cuda_local_var_34778_7_non_const_begin1 = ((((calculated_indices_len)[indices_now]))[0]);
# 184 "../src/indices/cal_indices.cu"
__cuda_local_var_34778_19_non_const_begin2 = ((((calculated_indices_len)[indices_now]))[1]);
# 187 "../src/indices/cal_indices.cu"
}
# 188 "../src/indices/cal_indices.cu"
else 
# 188 "../src/indices/cal_indices.cu"
{
# 189 "../src/indices/cal_indices.cu"
__cuda_local_var_34778_7_non_const_begin1 = (((((__cuda_local_var_34762_40_non_const_shared)[0]))[(__cuda_local_var_34771_7_non_const_whole_id - 1)]) + 1);
# 190 "../src/indices/cal_indices.cu"
__cuda_local_var_34778_19_non_const_begin2 = (((((__cuda_local_var_34762_40_non_const_shared)[1]))[(__cuda_local_var_34771_7_non_const_whole_id - 1)]) + 1);
# 191 "../src/indices/cal_indices.cu"
}
# 193 "../src/indices/cal_indices.cu"
(__cuda_local_var_34778_14_non_const_end1 = ((((__cuda_local_var_34762_40_non_const_shared)[0]))[__cuda_local_var_34771_7_non_const_whole_id])) , ((void)(__cuda_local_var_34778_26_non_const_end2 = ((((__cuda_local_var_34762_40_non_const_shared)[1]))[__cuda_local_var_34771_7_non_const_whole_id])));
# 195 "../src/indices/cal_indices.cu"
{
# 195 "../src/indices/cal_indices.cu"
__cuda_local_var_34789_7_non_const_left1 = (__cuda_local_var_34778_7_non_const_begin1 & 3);
# 195 "../src/indices/cal_indices.cu"
__cuda_local_var_34789_13_non_const_left2 = (__cuda_local_var_34778_19_non_const_begin2 & 3);
# 195 "../src/indices/cal_indices.cu"
__cuda_local_var_34789_19_non_const_right1 = ((3 - (__cuda_local_var_34778_14_non_const_end1 & 3)) & 3);
# 195 "../src/indices/cal_indices.cu"
__cuda_local_var_34789_26_non_const_right2 = ((3 - (__cuda_local_var_34778_26_non_const_end2 & 3)) & 3);
# 195 "../src/indices/cal_indices.cu"
(__cuda_local_var_34778_7_non_const_begin1 -= __cuda_local_var_34789_7_non_const_left1) , ((void)(__cuda_local_var_34778_19_non_const_begin2 -= __cuda_local_var_34789_13_non_const_left2));
# 195 "../src/indices/cal_indices.cu"
(__cuda_local_var_34778_14_non_const_end1 += __cuda_local_var_34789_19_non_const_right1) , ((void)(__cuda_local_var_34778_26_non_const_end2 += __cuda_local_var_34789_26_non_const_right2));
# 195 "../src/indices/cal_indices.cu"
(__cuda_local_var_34778_31_non_const_len1 = (__cuda_local_var_34778_14_non_const_end1 - __cuda_local_var_34778_7_non_const_begin1)) , ((void)(__cuda_local_var_34778_36_non_const_len2 = (__cuda_local_var_34778_26_non_const_end2 - __cuda_local_var_34778_19_non_const_begin2)));
# 195 "../src/indices/cal_indices.cu"
(__cuda_local_var_34789_19_non_const_right1 = (__cuda_local_var_34778_31_non_const_len1 - __cuda_local_var_34789_19_non_const_right1)) , ((void)(__cuda_local_var_34789_26_non_const_right2 = (__cuda_local_var_34778_36_non_const_len2 - __cuda_local_var_34789_26_non_const_right2)));
# 195 "../src/indices/cal_indices.cu"
}
# 199 "../src/indices/cal_indices.cu"
if (0 == ((__cuda_local_var_34772_40_non_const_shared_decide_next_addr)[__cuda_local_var_34771_7_non_const_whole_id]))
# 199 "../src/indices/cal_indices.cu"
{
# 200 "../src/indices/cal_indices.cu"
__cuda_local_var_34778_31_non_const_len1 = (__cuda_local_var_34778_36_non_const_len2 = (-999));
# 201 "../src/indices/cal_indices.cu"
}
# 202 "../src/indices/cal_indices.cu"
__cuda_local_var_34799_26_non_const_info = ((((partitions_info)[indices_now])) + __cuda_local_var_34771_7_non_const_whole_id);
# 203 "../src/indices/cal_indices.cu"
if (__cuda_local_var_34778_31_non_const_len1 <= __cuda_local_var_34778_36_non_const_len2)
# 203 "../src/indices/cal_indices.cu"
{
# 205 "../src/indices/cal_indices.cu"
(__cuda_local_var_34799_26_non_const_info->B2A) = ((__nv_bool)0);
# 206 "../src/indices/cal_indices.cu"
(__cuda_local_var_34799_26_non_const_info->addr) = (((((list_p)[indices_now]))[0]) + __cuda_local_var_34778_7_non_const_begin1);
# 207 "../src/indices/cal_indices.cu"
(__cuda_local_var_34799_26_non_const_info->opposite_addr) = (((((list_p)[indices_now]))[1]) + __cuda_local_var_34778_19_non_const_begin2);
# 208 "../src/indices/cal_indices.cu"
(__cuda_local_var_34799_26_non_const_info->left) = __cuda_local_var_34789_13_non_const_left2;
# 209 "../src/indices/cal_indices.cu"
(__cuda_local_var_34799_26_non_const_info->right) = __cuda_local_var_34789_26_non_const_right2;
# 210 "../src/indices/cal_indices.cu"
(__cuda_local_var_34799_26_non_const_info->len) = ((__cuda_local_var_34778_31_non_const_len1 + 1) >> 2);
# 211 "../src/indices/cal_indices.cu"
(__cuda_local_var_34799_26_non_const_info->len_opposite) = ((__cuda_local_var_34778_36_non_const_len2 + 1) >> 2);
# 212 "../src/indices/cal_indices.cu"
}
# 213 "../src/indices/cal_indices.cu"
else 
# 213 "../src/indices/cal_indices.cu"
{
# 215 "../src/indices/cal_indices.cu"
(__cuda_local_var_34799_26_non_const_info->B2A) = ((__nv_bool)1);
# 216 "../src/indices/cal_indices.cu"
(__cuda_local_var_34799_26_non_const_info->addr) = (((((list_p)[indices_now]))[1]) + __cuda_local_var_34778_19_non_const_begin2);
# 217 "../src/indices/cal_indices.cu"
(__cuda_local_var_34799_26_non_const_info->opposite_addr) = (((((list_p)[indices_now]))[0]) + __cuda_local_var_34778_7_non_const_begin1);
# 218 "../src/indices/cal_indices.cu"
(__cuda_local_var_34799_26_non_const_info->left) = __cuda_local_var_34789_7_non_const_left1;
# 219 "../src/indices/cal_indices.cu"
(__cuda_local_var_34799_26_non_const_info->right) = __cuda_local_var_34789_19_non_const_right1;
# 220 "../src/indices/cal_indices.cu"
(__cuda_local_var_34799_26_non_const_info->len) = ((__cuda_local_var_34778_36_non_const_len2 + 1) >> 2);
# 221 "../src/indices/cal_indices.cu"
(__cuda_local_var_34799_26_non_const_info->len_opposite) = ((__cuda_local_var_34778_31_non_const_len1 + 1) >> 2);
# 222 "../src/indices/cal_indices.cu"
}
# 224 "../src/indices/cal_indices.cu"
(__cuda_local_var_34799_26_non_const_info->warp_len) = ((__cuda_local_var_34799_26_non_const_info->len) - ((__cuda_local_var_34799_26_non_const_info->len) % 32));
# 225 "../src/indices/cal_indices.cu"
(((_scan_buffers)[indices_now])[__cuda_local_var_34771_7_non_const_whole_id]) = 0;
# 227 "../src/indices/cal_indices.cu"
if ((__cuda_local_var_34799_26_non_const_info->len) % 32)
# 227 "../src/indices/cal_indices.cu"
{
# 228 "../src/indices/cal_indices.cu"
(__cuda_local_var_34799_26_non_const_info->warp_len) += 32;
# 229 "../src/indices/cal_indices.cu"
}
# 231 "../src/indices/cal_indices.cu"
{
# 231 "../src/indices/cal_indices.cu"
__syncthreads();
# 231 "../src/indices/cal_indices.cu"
}
# 232 "../src/indices/cal_indices.cu"
if (((__cuda_local_var_34771_7_non_const_whole_id == ((2 * parts) - 1)) && (((__cuda_local_var_34772_40_non_const_shared_decide_next_addr)[__cuda_local_var_34771_7_non_const_whole_id]) == 1)) || (((__cuda_local_var_34772_40_non_const_shared_decide_next_addr)[__cuda_local_var_34771_7_non_const_whole_id]) && (!((__cuda_local_var_34772_40_non_const_shared_decide_next_addr)[(__cuda_local_var_34771_7_non_const_whole_id + 1)]))))
# 233 "../src/indices/cal_indices.cu"
{
# 234 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34831_8_non_const_begin_new1;
# 235 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34832_8_non_const_begin_new2;
# 234 "../src/indices/cal_indices.cu"
__cuda_local_var_34831_8_non_const_begin_new1 = ((((((__cuda_local_var_34762_40_non_const_shared)[0]))[__cuda_local_var_34771_7_non_const_whole_id]) + 1) & 3);
# 235 "../src/indices/cal_indices.cu"
__cuda_local_var_34832_8_non_const_begin_new2 = ((((((__cuda_local_var_34762_40_non_const_shared)[1]))[__cuda_local_var_34771_7_non_const_whole_id]) + 1) & 3);
# 236 "../src/indices/cal_indices.cu"
((swapped)[__cuda_local_var_34775_7_non_const_indices_next]) = 0;
# 237 "../src/indices/cal_indices.cu"
((swapped)[indices_now]) = 0;
# 239 "../src/indices/cal_indices.cu"
((((list_p)[__cuda_local_var_34775_7_non_const_indices_next]))[0]) = (((((((list_p)[indices_now]))[0]) + ((((__cuda_local_var_34762_40_non_const_shared)[0]))[__cuda_local_var_34771_7_non_const_whole_id])) + 1) - __cuda_local_var_34831_8_non_const_begin_new1);
# 240 "../src/indices/cal_indices.cu"
((((list_p)[__cuda_local_var_34775_7_non_const_indices_next]))[1]) = (((((((list_p)[indices_now]))[1]) + ((((__cuda_local_var_34762_40_non_const_shared)[1]))[__cuda_local_var_34771_7_non_const_whole_id])) + 1) - __cuda_local_var_34832_8_non_const_begin_new2);
# 241 "../src/indices/cal_indices.cu"
((((calculated_indices_len)[__cuda_local_var_34775_7_non_const_indices_next]))[0]) = __cuda_local_var_34831_8_non_const_begin_new1;
# 242 "../src/indices/cal_indices.cu"
((((calculated_indices_len)[__cuda_local_var_34775_7_non_const_indices_next]))[1]) = __cuda_local_var_34832_8_non_const_begin_new2;
# 245 "../src/indices/cal_indices.cu"
}
# 247 "../src/indices/cal_indices.cu"
} 
# 247 "../src/indices/cal_indices.cu"
}}
# 249 "../src/indices/cal_indices.cu"
___device__( __no_sc__) void _Z10cal_indx_3ii(
# 249 "../src/indices/cal_indices.cu"
int block_size, 
# 249 "../src/indices/cal_indices.cu"
int indices_now){
# 249 "../src/indices/cal_indices.cu"
{
# 249 "../src/indices/cal_indices.cu"
{
# 250 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34847_7_non_const_id;
# 251 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34848_7_non_const_side;
# 252 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34849_7_non_const_n;
# 253 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34850_7_non_const_part_size;
# 254 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34851_7_non_const_x;
# 254 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34851_9_non_const_y;
# 255 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34852_7_non_const_left;
# 255 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34852_16_non_const_right;
# 256 "../src/indices/cal_indices.cu"
 int *__cuda_local_var_34853_8_non_const_myList;
# 257 "../src/indices/cal_indices.cu"
 int *__cuda_local_var_34854_8_non_const_oppositeList;
# 274 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34871_7_non_const_x2;
# 274 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34871_10_non_const_y2;
# 294 "../src/indices/cal_indices.cu"
static  __shared__  __var_used__ volatile int __cuda_local_var_34891_40_non_const_shared[2][2049];
# 295 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34892_7_non_const_whole_id;
# 304 "../src/indices/cal_indices.cu"
static  __shared__  __var_used__ volatile int __cuda_local_var_34901_40_non_const_shared_decide_next_addr[2049];
# 313 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34910_7_non_const_indices_next;
# 316 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34913_7_non_const_begin1;
# 316 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34913_14_non_const_end1;
# 316 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34913_19_non_const_begin2;
# 316 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34913_26_non_const_end2;
# 316 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34913_31_non_const_len1;
# 316 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34913_36_non_const_len2;
# 327 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34924_7_non_const_left1;
# 327 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34924_13_non_const_left2;
# 327 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34924_19_non_const_right1;
# 327 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34924_26_non_const_right2;
# 343 "../src/indices/cal_indices.cu"
 struct partition_info *__cuda_local_var_34940_26_non_const_info;
# 380 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34977_7_non_const_ending;
# 250 "../src/indices/cal_indices.cu"
__cuda_local_var_34847_7_non_const_id = ((int)(threadIdx.x));
# 251 "../src/indices/cal_indices.cu"
__cuda_local_var_34848_7_non_const_side = ((int)(threadIdx.y));
# 252 "../src/indices/cal_indices.cu"
__cuda_local_var_34849_7_non_const_n = ((int)(blockDim.x));
# 253 "../src/indices/cal_indices.cu"
__cuda_local_var_34850_7_non_const_part_size = (block_size / __cuda_local_var_34849_7_non_const_n);
# 255 "../src/indices/cal_indices.cu"
__cuda_local_var_34852_7_non_const_left = 0;
# 256 "../src/indices/cal_indices.cu"
__cuda_local_var_34853_8_non_const_myList = ((((list_p)[indices_now]))[0]);
# 257 "../src/indices/cal_indices.cu"
__cuda_local_var_34854_8_non_const_oppositeList = ((((list_p)[indices_now]))[1]);
# 259 "../src/indices/cal_indices.cu"
if ((0 == __cuda_local_var_34847_7_non_const_id) && (1 == __cuda_local_var_34848_7_non_const_side))
# 259 "../src/indices/cal_indices.cu"
{
# 259 "../src/indices/cal_indices.cu"
return;
# 259 "../src/indices/cal_indices.cu"
}
# 261 "../src/indices/cal_indices.cu"
if (1 == __cuda_local_var_34848_7_non_const_side)
# 261 "../src/indices/cal_indices.cu"
{
# 262 "../src/indices/cal_indices.cu"
__cuda_local_var_34851_7_non_const_x = (block_size - 1);
# 263 "../src/indices/cal_indices.cu"
__cuda_local_var_34851_9_non_const_y = (__cuda_local_var_34847_7_non_const_id * __cuda_local_var_34850_7_non_const_part_size);
# 264 "../src/indices/cal_indices.cu"
__cuda_local_var_34852_16_non_const_right = ((__cuda_local_var_34849_7_non_const_n - __cuda_local_var_34847_7_non_const_id) * __cuda_local_var_34850_7_non_const_part_size);
# 265 "../src/indices/cal_indices.cu"
}
# 266 "../src/indices/cal_indices.cu"
else 
# 266 "../src/indices/cal_indices.cu"
{
# 267 "../src/indices/cal_indices.cu"
__cuda_local_var_34851_7_non_const_x = (((__cuda_local_var_34847_7_non_const_id + 1) * __cuda_local_var_34850_7_non_const_part_size) - 1);
# 268 "../src/indices/cal_indices.cu"
__cuda_local_var_34851_9_non_const_y = 0;
# 269 "../src/indices/cal_indices.cu"
__cuda_local_var_34852_16_non_const_right = ((__cuda_local_var_34847_7_non_const_id + 1) * __cuda_local_var_34850_7_non_const_part_size);
# 270 "../src/indices/cal_indices.cu"
}
# 275 "../src/indices/cal_indices.cu"
while (__cuda_local_var_34852_7_non_const_left < __cuda_local_var_34852_16_non_const_right)
# 275 "../src/indices/cal_indices.cu"
{
# 276 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34873_8_non_const_mid;
# 276 "../src/indices/cal_indices.cu"
__cuda_local_var_34873_8_non_const_mid = (((__cuda_local_var_34852_7_non_const_left + __cuda_local_var_34852_16_non_const_right) + 1) / 2);
# 277 "../src/indices/cal_indices.cu"
__cuda_local_var_34871_7_non_const_x2 = (__cuda_local_var_34851_7_non_const_x - __cuda_local_var_34873_8_non_const_mid);
# 278 "../src/indices/cal_indices.cu"
__cuda_local_var_34871_10_non_const_y2 = (__cuda_local_var_34851_9_non_const_y + __cuda_local_var_34873_8_non_const_mid);
# 279 "../src/indices/cal_indices.cu"
if ((__cuda_local_var_34853_8_non_const_myList[__cuda_local_var_34871_7_non_const_x2]) < (__cuda_local_var_34854_8_non_const_oppositeList[__cuda_local_var_34871_10_non_const_y2]))
# 279 "../src/indices/cal_indices.cu"
{
# 280 "../src/indices/cal_indices.cu"
__cuda_local_var_34852_16_non_const_right = (__cuda_local_var_34873_8_non_const_mid - 1);
# 280 "../src/indices/cal_indices.cu"
}
# 280 "../src/indices/cal_indices.cu"
else 
# 280 "../src/indices/cal_indices.cu"
{
# 281 "../src/indices/cal_indices.cu"
__cuda_local_var_34852_7_non_const_left = __cuda_local_var_34873_8_non_const_mid;
# 281 "../src/indices/cal_indices.cu"
}
# 282 "../src/indices/cal_indices.cu"
}
# 284 "../src/indices/cal_indices.cu"
__cuda_local_var_34871_7_non_const_x2 = (__cuda_local_var_34851_7_non_const_x - __cuda_local_var_34852_7_non_const_left);
# 285 "../src/indices/cal_indices.cu"
__cuda_local_var_34871_10_non_const_y2 = (__cuda_local_var_34851_9_non_const_y + __cuda_local_var_34852_7_non_const_left);
# 286 "../src/indices/cal_indices.cu"
if ((__cuda_local_var_34853_8_non_const_myList[__cuda_local_var_34871_7_non_const_x2]) == (__cuda_local_var_34854_8_non_const_oppositeList[__cuda_local_var_34871_10_non_const_y2]))
# 286 "../src/indices/cal_indices.cu"
{
# 287 "../src/indices/cal_indices.cu"
printf(((const char *)"!!<%d %d> found %d <%d,%d> (%d,%d)\n"), __cuda_local_var_34848_7_non_const_side, __cuda_local_var_34847_7_non_const_id, __cuda_local_var_34852_7_non_const_left, __cuda_local_var_34871_7_non_const_x2, __cuda_local_var_34871_10_non_const_y2, (__cuda_local_var_34853_8_non_const_myList[__cuda_local_var_34871_7_non_const_x2]), (__cuda_local_var_34854_8_non_const_oppositeList[__cuda_local_var_34871_10_non_const_y2]));
# 290 "../src/indices/cal_indices.cu"
}
# 293 "../src/indices/cal_indices.cu"
printf(((const char *)"<%d %d> found %d <%d,%d> (%d,%d)\n"), __cuda_local_var_34848_7_non_const_side, __cuda_local_var_34847_7_non_const_id, __cuda_local_var_34852_7_non_const_left, __cuda_local_var_34871_7_non_const_x2, __cuda_local_var_34871_10_non_const_y2, (__cuda_local_var_34853_8_non_const_myList[__cuda_local_var_34871_7_non_const_x2]), (__cuda_local_var_34854_8_non_const_oppositeList[__cuda_local_var_34871_10_non_const_y2]));
# 295 "../src/indices/cal_indices.cu"
__cuda_local_var_34892_7_non_const_whole_id = __cuda_local_var_34847_7_non_const_id;
# 296 "../src/indices/cal_indices.cu"
if (__cuda_local_var_34848_7_non_const_side == 1)
# 296 "../src/indices/cal_indices.cu"
{
# 297 "../src/indices/cal_indices.cu"
__cuda_local_var_34847_7_non_const_id = ((int)(((unsigned)(__cuda_local_var_34847_7_non_const_id - 1)) + (blockDim.x)));
# 297 "../src/indices/cal_indices.cu"
}
# 298 "../src/indices/cal_indices.cu"
((((__cuda_local_var_34891_40_non_const_shared)[0]))[(__cuda_local_var_34892_7_non_const_whole_id + 1)]) = __cuda_local_var_34871_7_non_const_x2;
# 299 "../src/indices/cal_indices.cu"
((((__cuda_local_var_34891_40_non_const_shared)[1]))[(__cuda_local_var_34892_7_non_const_whole_id + 1)]) = __cuda_local_var_34871_10_non_const_y2;
# 300 "../src/indices/cal_indices.cu"
if ((0 == __cuda_local_var_34892_7_non_const_whole_id) && (0U == (blockIdx.x)))
# 300 "../src/indices/cal_indices.cu"
{
# 301 "../src/indices/cal_indices.cu"
(((((__cuda_local_var_34891_40_non_const_shared)[0]))[0]) = (-1)) , ((void)(((((__cuda_local_var_34891_40_non_const_shared)[1]))[0]) = (-1)));
# 301 "../src/indices/cal_indices.cu"
}
# 302 "../src/indices/cal_indices.cu"
{
# 302 "../src/indices/cal_indices.cu"
__syncthreads();
# 302 "../src/indices/cal_indices.cu"
}
# 306 "../src/indices/cal_indices.cu"
if (((((__cuda_local_var_34891_40_non_const_shared)[0]))[(__cuda_local_var_34892_7_non_const_whole_id + 1)]) == ((((__cuda_local_var_34891_40_non_const_shared)[0]))[__cuda_local_var_34892_7_non_const_whole_id]))
# 306 "../src/indices/cal_indices.cu"
{
# 307 "../src/indices/cal_indices.cu"
((__cuda_local_var_34901_40_non_const_shared_decide_next_addr)[__cuda_local_var_34892_7_non_const_whole_id]) = (-1);
# 308 "../src/indices/cal_indices.cu"
}
# 308 "../src/indices/cal_indices.cu"
else 
# 308 "../src/indices/cal_indices.cu"
{
# 309 "../src/indices/cal_indices.cu"
if (((((__cuda_local_var_34891_40_non_const_shared)[1]))[(__cuda_local_var_34892_7_non_const_whole_id + 1)]) == ((((__cuda_local_var_34891_40_non_const_shared)[1]))[__cuda_local_var_34892_7_non_const_whole_id]))
# 309 "../src/indices/cal_indices.cu"
{
# 310 "../src/indices/cal_indices.cu"
((__cuda_local_var_34901_40_non_const_shared_decide_next_addr)[__cuda_local_var_34892_7_non_const_whole_id]) = 1;
# 311 "../src/indices/cal_indices.cu"
}
# 311 "../src/indices/cal_indices.cu"
else 
# 311 "../src/indices/cal_indices.cu"
{
# 312 "../src/indices/cal_indices.cu"
((__cuda_local_var_34901_40_non_const_shared_decide_next_addr)[__cuda_local_var_34892_7_non_const_whole_id]) = 0;
# 312 "../src/indices/cal_indices.cu"
}
# 312 "../src/indices/cal_indices.cu"
}
# 313 "../src/indices/cal_indices.cu"
__cuda_local_var_34910_7_non_const_indices_next = ((indices_now + 1) % 4);
# 317 "../src/indices/cal_indices.cu"
if (__cuda_local_var_34892_7_non_const_whole_id == 0)
# 317 "../src/indices/cal_indices.cu"
{
# 320 "../src/indices/cal_indices.cu"
__cuda_local_var_34913_7_non_const_begin1 = 0;
# 321 "../src/indices/cal_indices.cu"
__cuda_local_var_34913_19_non_const_begin2 = 0;
# 322 "../src/indices/cal_indices.cu"
}
# 323 "../src/indices/cal_indices.cu"
else 
# 323 "../src/indices/cal_indices.cu"
{
# 324 "../src/indices/cal_indices.cu"
__cuda_local_var_34913_7_non_const_begin1 = (((((__cuda_local_var_34891_40_non_const_shared)[0]))[(__cuda_local_var_34892_7_non_const_whole_id - 1)]) + 1);
# 325 "../src/indices/cal_indices.cu"
__cuda_local_var_34913_19_non_const_begin2 = (((((__cuda_local_var_34891_40_non_const_shared)[1]))[(__cuda_local_var_34892_7_non_const_whole_id - 1)]) + 1);
# 326 "../src/indices/cal_indices.cu"
}
# 328 "../src/indices/cal_indices.cu"
(__cuda_local_var_34913_14_non_const_end1 = ((((__cuda_local_var_34891_40_non_const_shared)[0]))[__cuda_local_var_34892_7_non_const_whole_id])) , ((void)(__cuda_local_var_34913_26_non_const_end2 = ((((__cuda_local_var_34891_40_non_const_shared)[1]))[__cuda_local_var_34892_7_non_const_whole_id])));
# 330 "../src/indices/cal_indices.cu"
__cuda_local_var_34913_31_non_const_len1 = ((__cuda_local_var_34913_14_non_const_end1 - __cuda_local_var_34913_7_non_const_begin1) + 1);
# 331 "../src/indices/cal_indices.cu"
__cuda_local_var_34913_36_non_const_len2 = ((__cuda_local_var_34913_26_non_const_end2 - __cuda_local_var_34913_19_non_const_begin2) + 1);
# 336 "../src/indices/cal_indices.cu"
if ((!(threadIdx.x)) && (!(blockIdx.x)))
# 336 "../src/indices/cal_indices.cu"
{
# 336 "../src/indices/cal_indices.cu"
{
# 337 "../src/indices/cal_indices.cu"
 int i;
# 337 "../src/indices/cal_indices.cu"
i = 0;
# 337 "../src/indices/cal_indices.cu"
for (; (i < 4); i++)
# 337 "../src/indices/cal_indices.cu"
{
# 338 "../src/indices/cal_indices.cu"
printf(((const char *)"\?\?\? %d\n"), ((__cuda_local_var_34901_40_non_const_shared_decide_next_addr)[i]));
# 338 "../src/indices/cal_indices.cu"
}
# 338 "../src/indices/cal_indices.cu"
}
# 338 "../src/indices/cal_indices.cu"
}
# 340 "../src/indices/cal_indices.cu"
if (0 != ((__cuda_local_var_34901_40_non_const_shared_decide_next_addr)[__cuda_local_var_34892_7_non_const_whole_id]))
# 340 "../src/indices/cal_indices.cu"
{
# 341 "../src/indices/cal_indices.cu"
__cuda_local_var_34913_31_non_const_len1 = (__cuda_local_var_34913_36_non_const_len2 = (-999));
# 342 "../src/indices/cal_indices.cu"
}
# 343 "../src/indices/cal_indices.cu"
__cuda_local_var_34940_26_non_const_info = ((((partitions_info)[indices_now])) + __cuda_local_var_34892_7_non_const_whole_id);
# 344 "../src/indices/cal_indices.cu"
if (__cuda_local_var_34913_31_non_const_len1 <= __cuda_local_var_34913_36_non_const_len2)
# 344 "../src/indices/cal_indices.cu"
{
# 346 "../src/indices/cal_indices.cu"
(__cuda_local_var_34940_26_non_const_info->B2A) = ((__nv_bool)0);
# 347 "../src/indices/cal_indices.cu"
(__cuda_local_var_34940_26_non_const_info->addr) = (((((list_p)[indices_now]))[0]) + __cuda_local_var_34913_7_non_const_begin1);
# 348 "../src/indices/cal_indices.cu"
(__cuda_local_var_34940_26_non_const_info->opposite_addr) = (((((list_p)[indices_now]))[1]) + __cuda_local_var_34913_19_non_const_begin2);
# 349 "../src/indices/cal_indices.cu"
(__cuda_local_var_34940_26_non_const_info->left) = __cuda_local_var_34924_13_non_const_left2;
# 350 "../src/indices/cal_indices.cu"
(__cuda_local_var_34940_26_non_const_info->right) = __cuda_local_var_34924_26_non_const_right2;
# 351 "../src/indices/cal_indices.cu"
(__cuda_local_var_34940_26_non_const_info->len) = ((__cuda_local_var_34913_31_non_const_len1 + 1) >> 2);
# 352 "../src/indices/cal_indices.cu"
(__cuda_local_var_34940_26_non_const_info->len_opposite) = ((__cuda_local_var_34913_36_non_const_len2 + 1) >> 2);
# 354 "../src/indices/cal_indices.cu"
(__cuda_local_var_34940_26_non_const_info->len) = __cuda_local_var_34913_31_non_const_len1;
# 356 "../src/indices/cal_indices.cu"
}
# 357 "../src/indices/cal_indices.cu"
else 
# 357 "../src/indices/cal_indices.cu"
{
# 359 "../src/indices/cal_indices.cu"
(__cuda_local_var_34940_26_non_const_info->B2A) = ((__nv_bool)1);
# 360 "../src/indices/cal_indices.cu"
(__cuda_local_var_34940_26_non_const_info->addr) = (((((list_p)[indices_now]))[1]) + __cuda_local_var_34913_19_non_const_begin2);
# 361 "../src/indices/cal_indices.cu"
(__cuda_local_var_34940_26_non_const_info->opposite_addr) = (((((list_p)[indices_now]))[0]) + __cuda_local_var_34913_7_non_const_begin1);
# 362 "../src/indices/cal_indices.cu"
(__cuda_local_var_34940_26_non_const_info->left) = __cuda_local_var_34924_7_non_const_left1;
# 363 "../src/indices/cal_indices.cu"
(__cuda_local_var_34940_26_non_const_info->right) = __cuda_local_var_34924_19_non_const_right1;
# 364 "../src/indices/cal_indices.cu"
(__cuda_local_var_34940_26_non_const_info->len) = ((__cuda_local_var_34913_36_non_const_len2 + 1) >> 2);
# 365 "../src/indices/cal_indices.cu"
(__cuda_local_var_34940_26_non_const_info->len_opposite) = ((__cuda_local_var_34913_31_non_const_len1 + 1) >> 2);
# 368 "../src/indices/cal_indices.cu"
(__cuda_local_var_34940_26_non_const_info->len) = __cuda_local_var_34913_36_non_const_len2;
# 370 "../src/indices/cal_indices.cu"
}
# 372 "../src/indices/cal_indices.cu"
(__cuda_local_var_34940_26_non_const_info->warp_len) = ((__cuda_local_var_34940_26_non_const_info->len) - ((__cuda_local_var_34940_26_non_const_info->len) % 32));
# 373 "../src/indices/cal_indices.cu"
(((_scan_buffers)[indices_now])[__cuda_local_var_34892_7_non_const_whole_id]) = 0;
# 375 "../src/indices/cal_indices.cu"
if ((__cuda_local_var_34940_26_non_const_info->len) % 32)
# 375 "../src/indices/cal_indices.cu"
{
# 376 "../src/indices/cal_indices.cu"
(__cuda_local_var_34940_26_non_const_info->warp_len) += 32;
# 377 "../src/indices/cal_indices.cu"
}
# 381 "../src/indices/cal_indices.cu"
if (__cuda_local_var_34892_7_non_const_whole_id == 0)
# 381 "../src/indices/cal_indices.cu"
{
# 382 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34979_8_non_const_start;
# 382 "../src/indices/cal_indices.cu"
__cuda_local_var_34979_8_non_const_start = ((__cuda_local_var_34901_40_non_const_shared_decide_next_addr)[(((blockDim.x) * 2U) - 2U)]);
# 383 "../src/indices/cal_indices.cu"
if (0 == __cuda_local_var_34979_8_non_const_start)
# 383 "../src/indices/cal_indices.cu"
{
# 384 "../src/indices/cal_indices.cu"
__cuda_local_var_34977_7_non_const_ending = ((int)(((blockDim.x) * 2U) - 3U));
# 385 "../src/indices/cal_indices.cu"
}
# 386 "../src/indices/cal_indices.cu"
else 
# 386 "../src/indices/cal_indices.cu"
{
# 386 "../src/indices/cal_indices.cu"
{
# 387 "../src/indices/cal_indices.cu"
 int i;
# 387 "../src/indices/cal_indices.cu"
i = ((int)(((blockDim.x) * 2U) - 3U));
# 387 "../src/indices/cal_indices.cu"
for (; (i >= 0); i--)
# 387 "../src/indices/cal_indices.cu"
{
# 388 "../src/indices/cal_indices.cu"
if (__cuda_local_var_34979_8_non_const_start != ((__cuda_local_var_34901_40_non_const_shared_decide_next_addr)[i]))
# 388 "../src/indices/cal_indices.cu"
{
# 389 "../src/indices/cal_indices.cu"
__cuda_local_var_34977_7_non_const_ending = i;
# 390 "../src/indices/cal_indices.cu"
goto __T20;
# 391 "../src/indices/cal_indices.cu"
}
# 391 "../src/indices/cal_indices.cu"
}
# 391 "../src/indices/cal_indices.cu"
}
# 391 "../src/indices/cal_indices.cu"
__T20:;
# 391 "../src/indices/cal_indices.cu"
;
# 392 "../src/indices/cal_indices.cu"
}
# 393 "../src/indices/cal_indices.cu"
}
# 394 "../src/indices/cal_indices.cu"
if (__cuda_local_var_34977_7_non_const_ending == __cuda_local_var_34892_7_non_const_whole_id)
# 394 "../src/indices/cal_indices.cu"
{
# 395 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34992_8_non_const_begin_new1;
# 396 "../src/indices/cal_indices.cu"
 int __cuda_local_var_34993_8_non_const_begin_new2;
# 395 "../src/indices/cal_indices.cu"
__cuda_local_var_34992_8_non_const_begin_new1 = ((((((__cuda_local_var_34891_40_non_const_shared)[0]))[__cuda_local_var_34892_7_non_const_whole_id]) + 1) & 3);
# 396 "../src/indices/cal_indices.cu"
__cuda_local_var_34993_8_non_const_begin_new2 = ((((((__cuda_local_var_34891_40_non_const_shared)[1]))[__cuda_local_var_34892_7_non_const_whole_id]) + 1) & 3);
# 397 "../src/indices/cal_indices.cu"
((swapped)[__cuda_local_var_34910_7_non_const_indices_next]) = 0;
# 398 "../src/indices/cal_indices.cu"
((swapped)[indices_now]) = 0;
# 400 "../src/indices/cal_indices.cu"
((((list_p)[__cuda_local_var_34910_7_non_const_indices_next]))[0]) = (((((((list_p)[indices_now]))[0]) + ((((__cuda_local_var_34891_40_non_const_shared)[0]))[__cuda_local_var_34892_7_non_const_whole_id])) + 1) - __cuda_local_var_34992_8_non_const_begin_new1);
# 401 "../src/indices/cal_indices.cu"
((((list_p)[__cuda_local_var_34910_7_non_const_indices_next]))[1]) = (((((((list_p)[indices_now]))[1]) + ((((__cuda_local_var_34891_40_non_const_shared)[1]))[__cuda_local_var_34892_7_non_const_whole_id])) + 1) - __cuda_local_var_34993_8_non_const_begin_new2);
# 402 "../src/indices/cal_indices.cu"
((((calculated_indices_len)[__cuda_local_var_34910_7_non_const_indices_next]))[0]) = __cuda_local_var_34992_8_non_const_begin_new1;
# 403 "../src/indices/cal_indices.cu"
((((calculated_indices_len)[__cuda_local_var_34910_7_non_const_indices_next]))[1]) = __cuda_local_var_34993_8_non_const_begin_new2;
# 406 "../src/indices/cal_indices.cu"
}
# 409 "../src/indices/cal_indices.cu"
} 
# 409 "../src/indices/cal_indices.cu"
}}
# 411 "../src/indices/cal_indices.cu"
__global__ __var_used__ void _Z8cal_indxiii(
# 411 "../src/indices/cal_indices.cu"
int block_size, 
# 411 "../src/indices/cal_indices.cu"
int block_2_size, 
# 411 "../src/indices/cal_indices.cu"
int indices_now){
# 411 "../src/indices/cal_indices.cu"
{
# 411 "../src/indices/cal_indices.cu"
{
# 413 "../src/indices/cal_indices.cu"
 int __cuda_local_var_35010_7_non_const_n;
# 413 "../src/indices/cal_indices.cu"
__cuda_local_var_35010_7_non_const_n = ((int)(blockDim.x));
# 414 "../src/indices/cal_indices.cu"
_Z10cal_indx_2iiii(__cuda_local_var_35010_7_non_const_n, (block_size / __cuda_local_var_35010_7_non_const_n), block_size, indices_now);
# 416 "../src/indices/cal_indices.cu"
} 
# 416 "../src/indices/cal_indices.cu"
}}
# 421 "../src/indices/cal_indices.cu"
__global__ __var_used__ void _Z12move_indicesiiii(
# 421 "../src/indices/cal_indices.cu"
int __val_param(len1), 
# 421 "../src/indices/cal_indices.cu"
int __val_param(len2), 
# 421 "../src/indices/cal_indices.cu"
int block_size, 
# 421 "../src/indices/cal_indices.cu"
int indices_now){__copy_param(int len1,__val_param(len1));__copy_param(int len2,__val_param(len2));
# 421 "../src/indices/cal_indices.cu"
{
# 421 "../src/indices/cal_indices.cu"
;
# 421 "../src/indices/cal_indices.cu"
;
# 421 "../src/indices/cal_indices.cu"
{
# 422 "../src/indices/cal_indices.cu"
 int __cuda_local_var_35019_7_non_const_indices_next;
# 423 "../src/indices/cal_indices.cu"
 int __cuda_local_var_35020_7_non_const_swapflag;
# 434 "../src/indices/cal_indices.cu"
 int __cuda_local_var_35031_7_non_const_b1;
# 422 "../src/indices/cal_indices.cu"
__cuda_local_var_35019_7_non_const_indices_next = ((indices_now + 1) % 4);
# 423 "../src/indices/cal_indices.cu"
__cuda_local_var_35020_7_non_const_swapflag = 0;
# 425 "../src/indices/cal_indices.cu"
if (len1 > len2)
# 425 "../src/indices/cal_indices.cu"
{
# 426 "../src/indices/cal_indices.cu"
 int *__cuda_local_var_35023_9_non_const_temp;
# 429 "../src/indices/cal_indices.cu"
 int __cuda_local_var_35026_8_non_const_temp2;
# 426 "../src/indices/cal_indices.cu"
__cuda_local_var_35023_9_non_const_temp = ((((list_p)[indices_now]))[0]);
# 427 "../src/indices/cal_indices.cu"
((((list_p)[indices_now]))[0]) = ((((list_p)[indices_now]))[1]);
# 428 "../src/indices/cal_indices.cu"
((((list_p)[indices_now]))[1]) = __cuda_local_var_35023_9_non_const_temp;
# 429 "../src/indices/cal_indices.cu"
__cuda_local_var_35026_8_non_const_temp2 = len1;
# 430 "../src/indices/cal_indices.cu"
len1 = len2;
# 431 "../src/indices/cal_indices.cu"
len2 = __cuda_local_var_35026_8_non_const_temp2;
# 432 "../src/indices/cal_indices.cu"
__cuda_local_var_35020_7_non_const_swapflag = 1;
# 433 "../src/indices/cal_indices.cu"
}
# 434 "../src/indices/cal_indices.cu"
__cuda_local_var_35031_7_non_const_b1 = (min(len1, block_size));
# 435 "../src/indices/cal_indices.cu"
((((list_p)[__cuda_local_var_35019_7_non_const_indices_next]))[0]) = (((((list_p)[indices_now]))[0]) + __cuda_local_var_35031_7_non_const_b1);
# 436 "../src/indices/cal_indices.cu"
((((list_p)[__cuda_local_var_35019_7_non_const_indices_next]))[1]) = ((((list_p)[indices_now]))[1]);
# 437 "../src/indices/cal_indices.cu"
((swapped)[__cuda_local_var_35019_7_non_const_indices_next]) = (((swapped)[indices_now]) ^ __cuda_local_var_35020_7_non_const_swapflag);
# 438 "../src/indices/cal_indices.cu"
((((calculated_indices_len)[indices_now]))[0]) = (__cuda_local_var_35031_7_non_const_b1 - 1);
# 439 "../src/indices/cal_indices.cu"
((((calculated_indices_len)[indices_now]))[1]) = (len2 - 1);
# 440 "../src/indices/cal_indices.cu"
} 
# 440 "../src/indices/cal_indices.cu"
}}
